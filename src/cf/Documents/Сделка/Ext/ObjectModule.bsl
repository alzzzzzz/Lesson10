
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр ПрибылиУбытки 
	Движения.ПрибылиУбытки.Записывать = Истина;
	
	Движение = Движения.ПрибылиУбытки.Добавить();
	Если Основание.НаправлениеСделки = Перечисления.НаправлениеСделки.Покупка Тогда	
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;	
	Иначе	
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	КонецЕсли;
	
	Движение.Период = Дата;
	Движение.Инструмент = Инструмент;
	Движение.НаправлениеСделки = НаправлениеСделки;
	Движение.ЦеноваяМодель = ЦеноваяМодель;
	Движение.СпособСовершенияСделки = СпособСовершенияСделки;
	Движение.Счет = Счет;
	Движение.Основание = Ссылка;
	Движение.СерияТестирования = СерияТестирования;
	
	Для каждого Строка Из Параметры Цикл
		Движение.Сумма = Движение.Сумма + Строка.Сумма; 		
	КонецЦикла;
	
	//Регистр открытые позиции
	
	
	Движения.ОткрытыеПозиции.Записывать = Истина;
	
	Движение = Движения.ОткрытыеПозиции.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Инструмент = Инструмент;
	Для каждого Строка Из  Параметры Цикл		
		Движение.Количество = Движение.Количество + Строка.Количество;			
	КонецЦикла;
		
	Движение.Счет = Счет;
	Движение.СерияТестирования = СерияТестирования;
	
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланСделки") Тогда
		// Заполнение шапки
		Инструмент = ДанныеЗаполнения.Инструмент;
		НаправлениеСделки = ДанныеЗаполнения.НаправлениеСделки;
		ЦеноваяМодель = ДанныеЗаполнения.ЦеноваяМодель;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если  ЭтоНовый() Тогда
		СсылкаНового = Документы.Сделка.ПолучитьСсылку(Новый УникальныйИдентификатор);
		Основание = СсылкаНового;
		УстановитьСсылкуНового(СсылкаНового);	
	КонецЕсли; 
	
КонецПроцедуры



