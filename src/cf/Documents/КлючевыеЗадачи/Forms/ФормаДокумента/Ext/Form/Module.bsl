
&НаКлиенте
Процедура СтнадартнаяДатаПриИзменении(Элемент)	
	Объект.Дата = СтандартнаяДатаНачала.Дата;	
	//Если Не ЗначениеЗаполнено(СтандартнаяДатаОкончания.Дата)  Тогда	
		ДатаОкончания = Объект.Дата + 60*60;
		СтандартнаяДатаОкончания.Дата = ДатаОкончания;
		Объект.ДатаОкончания = ДатаОкончания; //+1 ЧАС	
	//КонецЕсли; 
	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Объект.Ссылка)  Тогда
		
		  СтандартнаяДатаНачала.Дата = ТекущаяДата();
		  СтандартнаяДатаОкончания.Дата = СтандартнаяДатаОкончания.Дата + 60*60;
	  КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если СтандартнаяДатаОкончания.Дата <= СтандартнаяДатаНачала.Дата  Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Дата окончания задачи не может быть меньше даты начала задачи!";
		Сообщение.Поле = "СтандартнаяДатаОкончания";
		Сообщение.УстановитьДанные(СтандартнаяДатаОкончания);
		Сообщение.Сообщить();	
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.Название) Тогда
		Объект.Название = Строка(Объект.Этап);	
	КонецЕсли;
	
	ТекущийОбъект.Дата = СтандартнаяДатаНачала.Дата;
	ТекущийОбъект.ДатаОкончания = СтандартнаяДатаОкончания.Дата;
	ТекущийОбъект.Цвет = Новый ХранилищеЗначения(ЦветЗадачиВПланировщике);
	

КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЦветЗадачиВПланировщике = ТекущийОбъект.Цвет.Получить();
	СтандартнаяДатаНачала.Дата = ТекущийОбъект.Дата;	
	СтандартнаяДатаОкончания.Дата = ТекущийОбъект.ДатаОкончания;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И  ЗначениеЗаполнено(Объект.Цель) Тогда
		ЦветЦели = Объект.Цель.Цвет.Получить();
		//Объект.Цвет = ЦветЦели;
		ЦветЗадачиВПланировщике = ЦветЦели;
		Объект.НаследоватьЦветЦели = Истина;
		Элементы.ЦветЗадачиВПланировщике.Доступность = Ложь;		
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Цель)  Тогда
		Элементы.Цель.Вид = ВидПоляФормы.ПолеВвода;
		Элементы.Цель.Доступность = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаОкончания) И НЕ Объект.Дата = НачалоДня(Объект.ДатаОкончания) Тогда		
		Объект.Статус = Перечисления.СтатусыЗадач.Плавающая;
	Иначе 
		ОБъект.Статус = Перечисления.СтатусыЗадач.Запланированная;
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура НаследоватьОтЦелиПриИзменении(Элемент)
	Элементы.ЦветЗадачиВПланировщике.Доступность = Не Объект.НаследоватьЦветЦели;
	Если ЗначениеЗаполнено(Объект.Цель)  Тогда		
		ЦветЗадачиВПланировщике = ПолучитьЦветЦелиНаСервере();				
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьЦветЦелиНаСервере()
Возврат	Объект.Цель.Цвет.Получить();
	
КонецФункции // ()

&НаКлиенте
Процедура НазваниеШагаНажатие(Элемент, СтандартнаяОбработка)
	//Элемент.
КонецПроцедуры

&НаКлиенте
Процедура ЦельНажатие(Элемент, СтандартнаяОбработка)
	ыва = 1;
КонецПроцедуры

&НаСервере
Процедура СтандартнаяДатаОкончанияПриИзмененииНаСервере(ДатаНачала, ДатаОкончания)
	Если ДатаОкончания = НачалоДня(ДатаОкончания) ИЛИ ДатаОкончания = КонецДня(ДатаОкончания)Тогда
		Объект.Статус = Перечисления.СтатусыЗадач.Плавающая;
	Иначе
		Объект.Статус = Перечисления.СтатусыЗадач.Запланированная;
	КонецЕсли;
	
	Если ДатаОкончания < ДатаНачала  Тогда
		
		Объект.Дата = НачалоДня(Объект.Дата);		
		СтандартнаяДатаНачала.Дата = Объект.Дата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартнаяДатаОкончанияПриИзменении(Элемент)
	Попытка	
			СтандартнаяДатаОкончанияПриИзмененииНаСервере(Дата(Элементы.СтнадартнаяДатаНачала.ТекстРедактирования), Дата(Элемент.ТекстРедактирования));
	
	Исключение
	
	КонецПопытки;
КонецПроцедуры




