#Область ЭкспортныеПроцедуры
&НаСервере
Функция ПрочитатьДанныеXML_Открытие(ПутьКФайлу) Экспорт
	
	СтруктураВозврата = Новый Структура("СообщениеОбОшибке");
	СтруктураВозврата.Вставить("Результат",Ложь);	
	ЧтениеXML = Новый ЧтениеXML();
	
	Попытка
		ЧтениеXML.ОткрытьФайл(ПутьКФайлу);	
	Исключение	
		#Если НЕ МобильноеПриложениеСервер И НЕ МобильноеПриложениеКлиент Тогда
		Ошибка = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации(Ошибка,
		УровеньЖурналаРегистрации.Ошибка);	
		#КонецЕсли
		СтруктураВозврата.СообщениеОбОшибке = "Ошибка открытия файла!Подробная информация внесена в журнал регистрации.";
		Возврат СтруктураВозврата;	
	КонецПопытки;
	
	Результат = Новый Массив;
	
	ДанныеФайла = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	//TODO: Вынести в отдельную функцию поиск свойства
	Попытка	
		НомерСчёта = ДанныеФайла.Получить("client_code");	
	Исключение
		#Если НЕ МобильноеПриложениеСервер И НЕ МобильноеПриложениеКлиент Тогда
		Ошибка = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации(Ошибка,
		УровеньЖурналаРегистрации.Ошибка);		
		#КонецЕсли
		СтруктураВозврата.СообщениеОбОшибке = "Ошибка формата файла!Подробная информация внесена в журнал регистрации.";
		Возврат СтруктураВозврата;	
	КонецПопытки;
	
	
	Счёт = НайтиСчётПоНомеру(НомерСчёта);
	
	
	Если Счёт = Неопределено Тогда
		СтруктураВозврата.СообщениеОбОшибке = "Не удалось однозначно идентифицировать счет!";
		Возврат СтруктураВозврата ;			
	КонецЕсли;
	
	

	
	Попытка	
		СделкиИзФайла = ДанныеФайла.Получить("common_deal");	
	Исключение
		#Если НЕ МобильноеПриложениеСервер И НЕ МобильноеПриложениеКлиент Тогда
		Ошибка = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации(Ошибка,
		УровеньЖурналаРегистрации.Ошибка);
		#КонецЕсли
		СтруктураВозврата.СообщениеОбОшибке = "Ошибка формата файла!Подробная информация внесена в журнал регистрации.";
		Возврат СтруктураВозврата;	
	КонецПопытки;	
		
	
	Сделки.Очистить();
	
	Для каждого Строка Из СделкиИзФайла.item Цикл		
		
		//Проверим есть ли инструменты в базе		
		Инструмент = ПолучитьИнструментПоКороткомуКоду(Строка.security_name); 		
		Если Инструмент = Неопределено Тогда
			СтруктураВозврата.СообщениеОбОшибке = "Не удалось найти инструмент по короткому коду """ + Строка.security_name + """!";
			Возврат СтруктураВозврата ;			
		КонецЕсли;
		
		КодКлиента  = ПолучитьСоздатьКодКлиентаПоНаименованию(Строка.registration_code,Счёт);
		
				
		НоваяСтрока = Сделки.Добавить();
		НоваяСтрока.Счет = Счёт;
		НоваяСтрока.КодКлиента = КодКлиента; 
		НоваяСтрока.Инструмент = Инструмент;
		НоваяСтрока.Дата =  xmlЗначение(тип("дата"), Строка.deal_date);
		НоваяСтрока.Количество = Число(Строка.quantity);
		НоваяСтрока.Цена = Число(Строка.price);
		НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена ;
		НоваяСтрока.КомиссияБрокера =  Число(Строка.comm_trade);
		НоваяСтрока.КомиссияБиржи =   Число(Строка.comm_stock);
		НоваяСтрока.НомерЗаявки = 	Число(Строка.order_number);
		НоваяСтрока.НомерСделки =   Число(Строка.deal_number);
		НоваяСтрока.НаправлениеСделки	= ?(Число(Строка.deal_sign)>0,Перечисления.НаправлениеСделки.Продажа,Перечисления.НаправлениеСделки.Покупка) ;
	КонецЦикла;
	
	СтруктураВозврата.Вставить("Результат",Истина);
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Функция СоздатьДокументыСделок()Экспорт 
	
	СтруктураВозврата = Новый Структура("СообщениеОбОшибке");
	СтруктураВозврата.Вставить("Результат",Ложь);	
	Если НЕ Сделки.Количество() Тогда
		СтруктураВозврата.СообщениеОбОшибке = "Сделки не обнаружены!";	
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	
	Сделки.Сортировать("НомерЗаявки");
	
	НомерЗаявки = Неопределено;
	ДокументОбъект = Неопределено;
	
	Для каждого  Строка Из  Сделки Цикл
		
		Если ДокументОбъект = Неопределено Тогда
			ДокументОбъект = ПолучитьСоздатьДокументОбъектСделкаПоНомеруЗаявки(Строка.НомерЗаявки);				
			ЗаполнитьЗначенияСвойств(ДокументОбъект,Строка);
		КонецЕсли;
		
		Если  НЕ НомерЗаявки = Строка.НомерЗаявки и Не ДокументОбъект = Неопределено Тогда									
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			ДокументОбъект = ПолучитьСоздатьДокументОбъектСделкаПоНомеруЗаявки(Строка.НомерЗаявки);	
			ЗаполнитьЗначенияСвойств(ДокументОбъект,Строка);
		КонецЕсли;
						
		НоваяСтрокаДокумента = ДокументОбъект.Параметры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента,Строка);		
		
		НомерЗаявки = Строка.НомерЗаявки;
		
	КонецЦикла;
	
	
	
	  СтруктураВозврата.Результат = Истина;
	
	Возврат СтруктураВозврата;
	
	
КонецФункции

#КонецОбласти 


&НаСервере
Функция НайтиСчётПоНомеру(НомерСчёта)
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Счета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Счета КАК Счета
	|ГДЕ
	|	Счета.НомерСчёта ПОДОБНО &НомерСчёта";
	
	Запрос.УстановитьПараметр("НомерСчёта", НомерСчёта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;

	    Возврат Неопределено;
	
КонецФункции // ()
&НаСервере
Функция НайтиДокументПоНомеруЗаявки(НомерЗаявки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сделка.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Сделка КАК Сделка
		|ГДЕ
		|	Сделка.НомерЗаявки = &НомерЗаявки";
	
	Запрос.УстановитьПараметр("НомерЗаявки", НомерЗаявки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;
	 	

КонецФункции // ()
&НаСервере
Функция ПолучитьСоздатьКодКлиентаПоНаименованию(Наименование,Счёт)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КодыКлиентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КодыКлиентов КАК КодыКлиентов
	|ГДЕ
	|	КодыКлиентов.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	
	НовыйОбъект = Справочники.КодыКлиентов.СоздатьЭлемент();
	НовыйОбъект.Владелец = Счёт;
	НовыйОбъект.Наименование = Наименование;
	НовыйОбъект.Записать();
	
	Возврат НовыйОбъект.Ссылка;
	
КонецФункции // ()
&НаСервере
Функция ПолучитьСоздатьДокументОбъектСделкаПоНомеруЗаявки(НомерЗаявки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сделка.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Сделка КАК Сделка
		|ГДЕ
		|	Сделка.НомерЗаявки = &НомерЗаявки";
	
	Запрос.УстановитьПараметр("НомерЗаявки", НомерЗаявки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();	
	КонецЦикла;
	
	
	Возврат Документы.Сделка.СоздатьДокумент();

	
	

КонецФункции // ()

&НаСервере
Функция ПолучитьИнструментПоКороткомуКоду(КороткийКод)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Инструменты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Инструменты КАК Инструменты
		|ГДЕ
		|	Инструменты.secid = &КороткийКод";
	
	Запрос.УстановитьПараметр("КороткийКод", СокрЛП(КороткийКод));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;

	
КонецФункции // ()
