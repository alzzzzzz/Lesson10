
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ВероятностьПрибыли = 50;
	Объект.КоличествоЭкспериментов = 1;  
	КоличествоЭкспериментовПредыдущее = 1;   
	Объект.КоличествоВСерии = 100;
	Объект.РазмерПрибыли = 200;
	Объект.РазмерУбытка = 100;     
	Элементы.РазмерПрибылиПроцент.Доступность = Ложь;
	Элементы.РазмерУбыткаПроцент.Доступность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Сгенерировать(Команда)     
	ДобавитьКолонкиВТЧНаСервере(); 
	ЗаполнитьТаблицуСделками();
	ЗаполнитьТаблицуДепозита();
	ПостроитьГрафикСделок(); 
	ПостроитьГрафикДепозита();
	
КонецПроцедуры

#Область Служебные
// Добавляет колонки в ТЧ РезультатСделок в зависимости от   КоличествоЭкспериментов
//
//
&НаСервере
Процедура ДобавитьКолонкиВТЧНаСервере()
	
	Для каждого тч Из Метаданные.Обработки.ГенраторСделок.ТабличныеЧасти Цикл
		
		мДобавляемыеРеквизиты = Новый Массив;
		мУдаляемые = Новый Массив;
		
		КоличествоУдаляемых = ?(КоличествоЭкспериментовПредыдущее>Объект.КоличествоЭкспериментов,КоличествоЭкспериментовПредыдущее,Объект.КоличествоЭкспериментов);
		
		Для Сч = 1 По КоличествоУдаляемых Цикл
			
			Имя =  тч.Имя+"Выборка" + Сч; 
			Элемент = Элементы.Найти(Имя);   
			Если НЕ Элемент = Неопределено  Тогда
				мУдаляемые.Добавить(Элемент.ПутьКДанным);		
			КонецЕсли;
			
			
		КонецЦикла;
		
		
		
		
		Для Сч = 1 По Объект.КоличествоЭкспериментов Цикл
			
			Имя = тч.Имя+"Выборка" + Сч;   
			
			мДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Имя,Новый ОписаниеТипов("Число"),"Объект."+тч.Имя,Имя,Истина));	
			
		КонецЦикла;
		
		
		ИзменитьРеквизиты(мДобавляемыеРеквизиты,мУдаляемые); 
		
		Для Сч = 1 По Объект.КоличествоЭкспериментов Цикл
			Имя = тч.Имя + "Выборка" + Сч; 
			Если НЕ Элементы.Найти(Имя) = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
			НовыйЭлемент = Элементы.Добавить(Имя,Тип("ПолеФормы"),Элементы[тч.Имя]);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ПутьКДанным = "Объект."+тч.Имя+"."+Имя;  
			
			
		КонецЦикла;
		
	КонецЦикла;
	
	КоличествоЭкспериментовПредыдущее = Объект.КоличествоЭкспериментов;
	
КонецПроцедуры // ДобавитьКолонкуНаСервере()

#КонецОбласти


#Область Генераторы 
// Генерирует случайные сделки и заполняет таблицу РезультатыСделок
//
//
&НаСервере
Процедура ЗаполнитьТаблицуСделками()
	
	Объект.РезультатыСделок.Очистить();
	
	Генератор = Новый ГенераторСлучайныхЧисел();
	
	Прибыль= Объект.РазмерПрибыли;
	Убыток = -Объект.РазмерУбытка;
	
	
	
	Для Строка = 0 По  Объект.КоличествоВСерии Цикл      
		НакопленныйДепо = Объект.НачальныйДепозит;
		
		НоваяСтрока = Объект.РезультатыСделок.Добавить();
		Для Сч = 1 По Объект.КоличествоЭкспериментов Цикл
			Имя = "РезультатыСделокВыборка" + Сч; 
			СлучайноеЧисло = Генератор.СлучайноеЧисло(0,100);
			
			Если ВПроцентах Тогда
				
				Прибыль =  Окр(Объект.РазмерПрибылиПроцент*(НакопленныйДепо/100),2,РежимОкругления.Окр15как20);
				Убыток = - Окр(Объект.РазмерУбыткаПроцент*(НакопленныйДепо/100),2,РежимОкругления.Окр15как20);  
			КонецЕсли;
			
			
			Результат= ?(СлучайноеЧисло <= Объект.ВероятностьПрибыли,Прибыль,Убыток);
			
			НакопленныйДепо = НакопленныйДепо +Результат;
			
			НоваяСтрока[Имя] = Результат;
		КонецЦикла;
		
		
	КонецЦикла;	
	
КонецПроцедуры // ()



// Заполняет таблицу ИзменениеДепозита последовательной суммой сделок
//
//
&НаСервере
Процедура ЗаполнитьТаблицуДепозита()
	
	ТЗ = Объект.РезультатыСделок.Выгрузить() ;  
	
	Для каждого Колонка Из ТЗ.Колонки Цикл  
		Сумма = Объект.НачальныйДепозит;
		Если Колонка.Имя = "НомерСтроки" ИЛИ Колонка.Имя = "ИсходныйНомерСтроки"  Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого  Строка Из ТЗ Цикл
			
			Попытка
				
				СтрокаТЧ = Объект.ИзменениеДепозита.Получить(Строка.НомерСтроки-1);	
				
			Исключение
				СтрокаТЧ = Объект.ИзменениеДепозита.Добавить();
			КонецПопытки;
			
			
			
			
			
			ИмяКолонки = СтрЗаменить(Колонка.Имя,"РезультатыСделок","ИзменениеДепозита");	
			
			Сумма = Сумма + Строка[Колонка.Имя];
			СтрокаТЧ[ИмяКолонки] = Сумма;
			
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	
	
	
КонецПроцедуры // ЗаполнитьТаблицуДепозита()



///////////Динамические прибыли убытки/////////////
&НаСервере
Процедура ИспользоватьДинамическуюПрибыльПриИзмененииНаСервере()
	ЗаполнитьТаблицуСделкиДинамическиеПУ();
	ЗаполнитьТаблицуДинамическихПУ();
	ПостроитьГрафикДинамическихПУ();
	ПостроитьГрафикРаспределенияДинамическихПУ();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДинамическуюПрибыльПриИзменении(Элемент)   
	
	Если Не Объект.ИзменениеДепозита.Количество() Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо сгенерировать начальную выбоку!";
		Сообщение.Сообщить();	
		Возврат;
		
	КонецЕсли;
	
	Если НЕ Объект.ИспользоватьДинамическуюПрибыль   Тогда
		Объект.ДинамическиеПУ.Очистить();  
		ГрафикДинамическихПУ.Очистить(); 
		ГрафикРаспределенияДинамическихПУ.Очистить();
		Возврат;
	КонецЕсли;
	
	Если Объект.ИспользоватьДинамическуюПрибыль  И Не ЗначениеЗаполнено(Объект.ДинамическаяПрибыльКонец) Тогда	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо задать диапазон!";
		Сообщение.Поле = "Объект.ДинамическаяПрибыльКонец";
		Сообщение.УстановитьДанные(Объект.ДинамическаяПрибыльКонец);
		Сообщение.Сообщить();	
		Возврат;
	КонецЕсли;        
	
	
	ИспользоватьДинамическуюПрибыльПриИзмененииНаСервере();
КонецПроцедуры      

&НаСервере
Процедура ИспользоватьДинамическийУбытокПриИзмененииНаСервере()  
	ЗаполнитьТаблицуСделкиДинамическиеПУ();
	ЗаполнитьТаблицуДинамическихПУ();
	ПостроитьГрафикДинамическихПУ();  
	ПостроитьГрафикРаспределенияДинамическихПУ();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДинамическийУбытокПриИзменении(Элемент)   
	Если Не Объект.ИзменениеДепозита.Количество() Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо сгенерировать начальную выбоку!";
		Сообщение.Сообщить();	
		Возврат;
		
		
		
	КонецЕсли;
	Если НЕ Объект.ИспользоватьДинамическийУбыток  Тогда
		Объект.ДинамическиеПУ.Очистить();
		ГрафикДинамическихПУ.Очистить(); 
		ГрафикРаспределенияДинамическихПУ.Очистить();
		Возврат;
	КонецЕсли;
	Если Объект.ИспользоватьДинамическийУбыток  И Не ЗначениеЗаполнено(Объект.ДинамическийУбытокКонец) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо задать диапазон!";
		Сообщение.Поле = "Объект.ДинамическийУбытокКонец";
		Сообщение.УстановитьДанные(Объект.ДинамическийУбытокКонец);
		Сообщение.Сообщить();	
		Возврат;
	КонецЕсли;
	
	
	ИспользоватьДинамическийУбытокПриИзмененииНаСервере();
КонецПроцедуры

// Заполняет таблицу ДинамическиеПУ из таблицы ИзменениеДепозита 
//
//
&НаСервере
Процедура ЗаполнитьТаблицуДинамическихПУ()
	
	Объект.ДинамическиеПУ.Очистить();
	
	ТЗ = Объект.РезультатыСделок.Выгрузить();
	
	Генератор = Новый	ГенераторСлучайныхЧисел();   
	
	
	
	Для каждого Колонка Из ТЗ.Колонки Цикл  
		Если Колонка.Имя = "НомерСтроки" ИЛИ Колонка.Имя = "ИсходныйНомерСтроки"  Тогда
			Продолжить;
		КонецЕсли;
		
		Сумма = Объект.НачальныйДепозит;
		Для каждого Строка Из  ТЗ Цикл   
			
			
			
			
			
			Имя = СтрЗаменить(Колонка.Имя,"РезультатыСделок","ДинамическиеПУ");
			
			Попытка
				СтрокаТЧ = Объект.ДинамическиеПУ.Получить(Строка.НомерСтроки-1);	
			Исключение
				СтрокаТЧ = Объект.ДинамическиеПУ.Добавить();
			КонецПопытки;     
			
			РезультатСделки = Строка[Колонка.Имя];
			Если РезультатСделки > 0 И Объект.ИспользоватьДинамическуюПрибыль Тогда
				Сумма = Сумма + Генератор.СлучайноеЧисло(Объект.ДинамическаяПрибыльНачало,Объект.ДинамическаяПрибыльКонец);
			ИначеЕсли 	РезультатСделки < 0 И Объект.ИспользоватьДинамическийУбыток Тогда 
				Сумма = Сумма - Генератор.СлучайноеЧисло(Объект.ДинамическийУбытокНачало,Объект.ДинамическийУбытокКонец);
			Иначе
				Сумма = Сумма + Строка[Колонка.Имя];
			КонецЕсли;  
			
			СтрокаТЧ[Имя] = Сумма;
			
			
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	
КонецПроцедуры // ЗаполнитьТаблицуДинамическихПУ()

 // Заполняет таблицу СделкиДинамическиеПУ
 //
 //
 &НаСервере
 Процедура ЗаполнитьТаблицуСделкиДинамическиеПУ()     
	Объект.СделкиДинамическиеПУ.Очистить();
	
	ТЗ = Объект.РезультатыСделок.Выгрузить(); 
		
	Генератор = Новый	ГенераторСлучайныхЧисел();   

	
	Для каждого Колонка Из ТЗ.Колонки Цикл
		
		Если Колонка.Имя = "НомерСтроки" ИЛИ Колонка.Имя = "ИсходныйНомерСтроки"  Тогда
			Продолжить;
		КонецЕсли;    
		
		Для каждого  Строка Из Объект.РезультатыСделок Цикл
			
			Имя = СтрЗаменить(Колонка.Имя,"РезультатыСделок","СделкиДинамическиеПУ");
			
			Попытка
				СтрокаТЧ = Объект.СделкиДинамическиеПУ.Получить(Строка.НомерСтроки-1);	
			Исключение
				СтрокаТЧ = Объект.СделкиДинамическиеПУ.Добавить();
			КонецПопытки;     
			
			РезультатСделки = Строка[Колонка.Имя];         
			
			
			Если РезультатСделки > 0 И Объект.ИспользоватьДинамическуюПрибыль Тогда
				РезультатСделки =  Генератор.СлучайноеЧисло(Объект.ДинамическаяПрибыльНачало,Объект.ДинамическаяПрибыльКонец);
			ИначеЕсли 	РезультатСделки < 0 И Объект.ИспользоватьДинамическийУбыток Тогда 
				РезультатСделки =  - Генератор.СлучайноеЧисло(Объект.ДинамическийУбытокНачало,Объект.ДинамическийУбытокКонец);
			КонецЕсли;  

			
			
			
			СтрокаТЧ[Имя] = РезультатСделки;

			
		КонецЦикла;
		
		
	КонецЦикла;
	
 
 	
 
 КонецПроцедуры // ЗаполнитьТаблицуСделкиДинамическиеПУ()
 


////////////////////////////////////////////////////

#КонецОбласти



#Область Графики

// Строит график изменения депозита из таблицы сделок
//
//
&НаСервере
Процедура ПостроитьГрафикСделок()
	ГрафикСделок.Очистить();
	Для Сч = 1 По Объект.КоличествоЭкспериментов Цикл
		Имя = "РезультатыСделокВыборка" + Сч; 
		Серия = 	ГрафикСделок.Серии.Добавить(Имя);
		Для каждого  Строка Из Объект.РезультатыСделок Цикл
			Значение = Строка[Имя];
			Точка = ГрафикСделок.УстановитьТочку(Строка.НомерСтроки);
			ГрафикСделок.УстановитьЗначение(Точка,Серия,Значение);
			
		КонецЦикла;
		
		
		
	КонецЦикла;
	
	
КонецПроцедуры // ПостроитьГрафикДепозита()

// Строит график депозита по таблице ИзменениеДепозита
//
&НаСервере
Процедура ПостроитьГрафикДепозита()
	ГрафикДепозита.Очистить();  
	ГрафикДепозита.Серии.Очистить();
	ГрафикДепозита.ОсьТочек.СпособОпределенияМаксимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.АвтоОпределение;
	ГрафикДепозита.АвтоМинимальноеЗначение = Объект.НачальныйДепозит/2; 
	СерияНачальногоДепозита = 	ГрафикДепозита.Серии.Добавить("Начальный депозит");

	Для Сч  = 1 По Объект.КоличествоЭкспериментов  Цикл
		Имя = "ИзменениеДепозитаВыборка" + Сч; 
		Серия = 	ГрафикДепозита.Серии.Добавить(Имя);
				Для каждого  Строка Из Объект.ИзменениеДепозита Цикл
			Значение = Строка[Имя];
			Точка = ГрафикДепозита.УстановитьТочку(Строка.НомерСтроки);
			ГрафикДепозита.УстановитьЗначение(Точка,Серия,Значение);
			
			
			Значение = Объект.НачальныйДепозит;
			Точка = ГрафикДепозита.УстановитьТочку(Строка.НомерСтроки);
			ГрафикДепозита.УстановитьЗначение(Точка,СерияНачальногоДепозита,Значение);
			
			
		КонецЦикла;
		
		
	КонецЦикла;
	
КонецПроцедуры // ПостроитьГрафикДепозита()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ПостроитьГрафикДинамическихПУ()
	
	ГрафикДинамическихПУ.Очистить();
	Для Сч  = 1 По Объект.КоличествоЭкспериментов  Цикл
		Имя = "ДинамическиеПУВыборка" + Сч; 
		ИсходнаяКолонка = "ИзменениеДепозитаВыборка"  + Сч; 
		
		Серия = 	ГрафикДинамическихПУ.Серии.Добавить(Имя);
		Серия.ПриоритетЦвета = Истина;
		ИсходнаяСерия = ГрафикДинамическихПУ.Серии.Добавить(ИсходнаяКолонка);
		ИсходнаяСерия.Линия = Новый Линия(ТипЛинииДиаграммы.Точечная);     
		ИсходнаяСерия.ПриоритетЦвета = Ложь;	
		Для каждого  Строка Из Объект.ДинамическиеПУ Цикл
			ИсходноеЗначение = Объект.ИзменениеДепозита.Получить(Строка.НомерСтроки-1)[ИсходнаяКолонка];
			Значение = Строка[Имя];
			ИсходнаяТочка = ГрафикДинамическихПУ.УстановитьТочку(Строка.НомерСтроки);
			Точка = ГрафикДинамическихПУ.УстановитьТочку(Строка.НомерСтроки);
			ГрафикДинамическихПУ.УстановитьЗначение(Точка,Серия,Значение);       
			ГрафикДинамическихПУ.УстановитьЗначение(ИсходнаяТочка,ИсходнаяСерия,ИсходноеЗначение);       
			
			
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	
КонецПроцедуры // ()

// Строит график распределения прибылей
//
//
&НаСервере
Процедура ПостроитьГрафикРаспределенияДинамическихПУ()
	ГрафикРаспределенияДинамическихПУ.Очистить();
	Для Сч = 1 По Объект.КоличествоЭкспериментов  Цикл
		Имя = "СделкиДинамическиеПУВыборка" + Сч; 
		СерияПрибылей = 	ГрафикРаспределенияДинамическихПУ.Серии.Добавить(Имя+"(Прибыль)");
		СерияУбытков = ГрафикРаспределенияДинамическихПУ.Серии.Добавить(Имя+"(Убыток)");
		Для каждого  Строка Из Объект.СделкиДинамическиеПУ Цикл        
			Значение = Строка[Имя];                              
			Если Значение = 0  Тогда
				Продолжить;
			КонецЕсли;
			Точка = ГрафикРаспределенияДинамическихПУ.УстановитьТочку(Строка.НомерСтроки);
			ГрафикРаспределенияДинамическихПУ.УстановитьЗначение(Точка,?(Значение>0,СерияПрибылей,СерияУбытков),Значение);
		КонецЦикла;
	КонецЦикла;
	

КонецПроцедуры // ПостроитьГрафикРаспределенияДинамическихПрибылей()

&НаКлиенте
Процедура ВПроцентахПриИзменении(Элемент)
	Если ВПроцентах Тогда
	
		Элементы.РазмерПрибыли.Доступность = Ложь;
		Элементы.РазмерУбытка.Доступность = Ложь;  
		
		Элементы.РазмерПрибылиПроцент.Доступность = Истина;
		Элементы.РазмерУбыткаПроцент.Доступность = Истина;
	Иначе 
		Элементы.РазмерПрибыли.Доступность = Истина;
		Элементы.РазмерУбытка.Доступность = Истина;
		Элементы.РазмерПрибылиПроцент.Доступность = Ложь;
		Элементы.РазмерУбыткаПроцент.Доступность = Ложь;
	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


